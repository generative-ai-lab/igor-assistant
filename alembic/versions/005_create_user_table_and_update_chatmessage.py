"""Create user table and update chatmessage

Revision ID: 005
Revises: 004
Create Date: 2024-02-23 12:00:13.650659

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.orm import Session, declarative_base

# revision identifiers, used by Alembic.
revision = '005'
down_revision = '004'
branch_labels = None
depends_on = None

Base = declarative_base()

class User(Base):
    __tablename__ = 'user'
    user_id = sa.Column(sa.BigInteger, primary_key=True)
    first_name = sa.Column(sa.Text, nullable=True)
    last_name = sa.Column(sa.Text, nullable=True)
    username = sa.Column(sa.Text, nullable=True)

class ChatMessage(Base):
    __tablename__ = 'chatmessage'
    uniq_id = sa.Column(sa.Integer, primary_key=True, unique=True, autoincrement=True)
    user_id = sa.Column(sa.BigInteger, nullable=True)
    user_first_name = sa.Column(sa.Text, nullable=True)
    user_last_name = sa.Column(sa.Text, nullable=True)
    username = sa.Column(sa.Text, nullable=True)


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
        sa.Column('user_id', sa.BigInteger(), nullable=False),
        sa.Column('first_name', sa.Text(), nullable=True),
        sa.Column('last_name', sa.Text(), nullable=True),
        sa.Column('username', sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint('user_id'),
        sa.UniqueConstraint('user_id')
    )

    # Create a temporary session for raw SQL execution
    bind = op.get_bind()
    session = Session(bind=bind)

    # Migrate data from chatmessage to user
    chat_messages = session.query(ChatMessage).distinct(ChatMessage.user_id).all()
    for cm in chat_messages:
        user = User(
            user_id=cm.user_id,
            first_name=cm.user_first_name,
            last_name=cm.user_last_name,
            username=cm.username
        )
        session.merge(user)  # Use merge to handle potential duplicate user_id
    session.commit()

    # Proceed with the rest of the migration
    op.create_foreign_key(None, 'chatmessage', 'user', ['user_id'], ['user_id'])
    op.drop_column('chatmessage', 'username')
    op.drop_column('chatmessage', 'user_last_name')
    op.drop_column('chatmessage', 'user_first_name')
    # ### end Alembic commands ###



def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('chatmessage', sa.Column('user_first_name', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('chatmessage', sa.Column('user_last_name', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('chatmessage', sa.Column('username', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'chatmessage', type_='foreignkey')
    op.drop_table('user')
    # ### end Alembic commands ###
